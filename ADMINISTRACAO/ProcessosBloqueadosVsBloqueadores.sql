USE MONITORSQL
GO
WITH CTE_BLOQUEIO
AS
(
	SELECT A.CMD
	,      MAX(A.EVENTDATE) OVER (PARTITION BY A.SPID,A.CMD) DATAEVENTO
	,      B.DURATION_M
	,      A.OBJECTNAME
	,      A.PROGRAM_NAME
	,      A.LOGINAME
	,      A.SPID 
	,      A.DB
    ,      A.HOSTNAME AS HOSTEXECUTOR
	,      B.SPID AS PROCESSOBLOQUEADOR
	,      B.CMD AS CMD_BLOQUEADOR
	,      B.OBJECTNAME OBJETOBLOQUEADOR
	,      B.LOGINAME AS LOGINBLOQUEADOR
    ,      B.HOSTNAME AS HOSTBLOQUEADOR
	,      B.EVENTDATE AS DATABLOQUEADOR
	FROM       PROCESSOS AS A WITH (NOLOCK)
	INNER JOIN PROCESSOS AS B WITH (NOLOCK) ON B.SPID=A.BLOCKED
	WHERE A.EVENTDATE BETWEEN '2017-03-29 17:20:00' AND  '2017-03-29 17:50:00' AND B.EVENTDATE = A.EVENTDATE AND A.BLOCKED <> 0

	UNION ALL

	SELECT C.CMD
	,      MAX(C.EVENTDATE) OVER (PARTITION BY C.SPID,C.CMD) DATAEVENTO
	,      C.DURATION_M
	,      C.OBJECTNAME
	,      C.PROGRAM_NAME
	,      C.LOGINAME
	,      C.SPID 
	,      C.DB
	, NULL
	, NULL
	, NULL
	, NULL
	, NULL
	, NULL
	,C.EVENTDATE

	FROM PROCESSOS AS C WITH (NOLOCK)INNER JOIN CTE_BLOQUEIO AS B ON C.SPID=B.PROCESSOBLOQUEADOR AND C.EVENTDATE=DATABLOQUEADOR
	
)

SELECT DISTINCT *
FROM CTE_BLOQUEIO
ORDER BY DATAEVENTO DESC
